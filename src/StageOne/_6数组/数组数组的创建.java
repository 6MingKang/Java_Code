package StageOne._6数组;

/**
 * Writer:LiuXueKe
 * Time:2022/4/2、0:55
 * JavaCode
 * 为什么要使用数组:
 * 例如:
 *      如何存储100名学生的成绩?
 *          办法:使用变量存储 重复声明100个double类型变量即可
 *          缺点:麻烦 重复操作过多
 *      如何让100名学生的成绩全部+1?
 *          办法:100个变量重复相同操作 直至全部完成
 *          缺点:无法进行统一的操作
 *
 * 数组的概念:
 *      概念:
 *          一组连续的存储空间 存储多个相同类型的值
 *      特点:
 *          类型相同
 *          长度固定
 *
 * 数组的组成:
 *      数组的创建:数据类型[]数组名 = new 数据类型[数组长度];
 *      数组中的每个数据格被称为"数据元素"
 *      对每个元素进行赋值或取值的操作被称为"元素访问"
 *      访问元素时 需要使用"下标"(从0开始 一次+1 自动生成)
 *      访问的语法:数组名[下标];//例如 存:a[0] = 10  取:a[0]
 *
 * 数组的使用:
 *      创建数组
 *      依次赋值
 *      依次取值
 *
 * 下标范围:
 *      有效下标范围:0~数组长度-1
 *      访问无效下标会导致数组下标越界:Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException
 *
 * 数组的遍历:
 *      从头至尾 逐一对数组的每个元素进行访问
 *      长度可以用.length来动态获取长度
 *
 * 数组的默认值:
 *      数组在没有被赋值的情况下也能正常访问
 *      整数:0
 *      小数:0.0
 *      字符:\u0000
 *      布尔:false
 *      其他:null
 *
 * 数组的创建语法:
 *      先声明 再分配空间:
 *      数据类型[]数组名;
 *      数组名 = new 数据类型[数组长度];
 *
 *      声明并分配空间:
 *      数据类型[]数组名 = new 数据类型[数组长度];
 *
 *      声明并赋值(繁):
 *      数据类型[]数组名 = new 数据类型[]{值1,值2,值3,值4,......};
 *
 *      声明并赋值(简):
 *      数据类型[]数组名 = {值1,值2,值3,值4,......}//显示初始化 注意:不可换行
 */
public class 数组数组的创建 {
    public static void main(String[] args) {

        //先声明 再分配空间
        int[]a1;
        a1 = new int[5];

        //声明并分配空间
        int[]b2 = new int[5];

        //声明并赋值(繁)
        int[] a3 = new int[]{1,2,3};

        //声明并赋值(简)
        int[] a4 = {1,2,3,4,5};




        //创建一个int类型的数组 长度为10
        int [] a = new int[10];
        //赋值
        a[0]=1;
        a[1]=2;
        a[2]=2;
        a[3]=2;
        a[4]=2;
        a[5]=2;
        a[6]=2;

        //遍历 动态获取数组长度 用i充当下标 逐一访问数组中的每个元素
        for (int i = 0; i < a.length; i++) {
            //打印出来7个2 剩下没有被赋值的下标会打印出来默认值0
            System.out.println(a[i]);

        }

    }

}
